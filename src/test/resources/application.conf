akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

integration {
  infrastructure = "docker"
  infrastructure = ${?INTEGRATION_INFRASTRUCTURE}
  interceptionUri = "/interceptions/"
  mocksUri = "/mocks/"
  retryCount = 10
  retryCount = ${?INTEGRATION_RETRY_COUNT}
  retryDelay = 1500
  retryDelay = ${?INTEGRATION_RETRY_DELAY}

  applicationStartDuration = 40000
  applicationStartDuration = ${?INTEGRATION_APPLICATION_START_DURATION}
  verboseLogging = true
  verboseLogging = ${?INTEGRATION_VERBOSE_LOGGING}
  waitForFactor = 2.0
  waitForFactor = ${?INTEGRATION_WAIT_FOR_FACTOR}

  repositoryHttpCallTimeout = 60 seconds
  repositoryHttpCallRetryCount = 16
}

docker {
  debug = false
  debug = ${?DOCKER_DEBUG}
  // minikube
  //executable = "/Users/USERNAME/.dvm/bin/docker/1.10.3/docker"
  executable = "docker"
  executable = ${?DOCKER_EXECUTABLE}
  configPath = "docker-example"
  configPath = ${?DOCKER_CONFIG_PATH}
  setEnv = false
  // minikube
  //setEnv = true
  setEnv = ${?DOCKER_SET_ENV}
  projectName = "integrationtests"
  projectName = ${?DOCKER_PROJECT_NAME}
  applicationStartDuration = 0
  applicationStartDuration = ${?DOCKER_APPLICATION_START_DURATION}
  infrastructureStartDuration = 2000
  infrastructureStartDuration = ${?DOCKER_INFRASTRUCTURE_START_DURATION}
  shutdownDuration = 0
  shutdownDuration = ${?DOCKER_SHUTDOWN_DURATION}
  host = "tcp://"${docker.integration.host}":2376"
  host = ${?DOCKER_HOST}
  forceNoTls = true
  forceNoTls = ${?DOCKER_FORCE_NO_TLS}
  tlsVerify = "1"
  tlsVerify = ${?DOCKER_TLS_VERIFY}
  certPath = ${HOME}"/.docker/machine/machines/projects"
  certPath = ${?DOCKER_CERT_PATH}
  networkName = "integrationtests_default"
  networkName = ${?DOCKER_NETWORK_NAME}
  infrastructureContainers = [
    "redis",
    "elk",
    "test_server",
  ]
  applicationContainers = [
    "user_service",
    "shop_service",
  ]

  integration {
    host = "localhost"
    // minikube
    //host = "192.168.99.100"
    host = ${?INTEGRATION_HOST}
  }

  integrationServer {
    port = 8090
    port = ${?INTEGRATION_SERVER_PORT}
  }

  redis {
    host = ${docker.integration.host}
    host = ${?REDIS_HOST}
    port = 6379
    port = ${?REDIS_PORT}
  }

  services {
    user {
      url = "http://"${docker.integration.host}":8081"
      url = ${?USER_REPOSITORY_URL}
    }
    shop {
      url = "http://"${docker.integration.host}":8082"
      url = ${?BOOKING_REPOSITORY_URL}
    }
  }
}
